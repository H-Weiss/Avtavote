{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\AvtaVote\\\\frontend\\\\src\\\\components\\\\Surveys.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Surveys() {\n  _s();\n  const [surveys, setSurveys] = useState([]);\n  const [selectedSurvey, setSelectedSurvey] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  useEffect(() => {\n    fetchSurveys();\n  }, []);\n  const fetchSurveys = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/surveys', {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      setSurveys(response.data);\n    } catch (error) {\n      console.error('Failed to fetch surveys:', error);\n    }\n  };\n  const handleVote = async () => {\n    if (!selectedSurvey || !selectedOption) return;\n    try {\n      await axios.post('http://localhost:5000/vote', {\n        survey_id: selectedSurvey.id,\n        option_id: selectedOption\n      }, {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      alert('Vote recorded successfully!');\n      setSelectedSurvey(null);\n      setSelectedOption(null);\n    } catch (error) {\n      console.error('Failed to vote:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Surveys\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), surveys.map(survey => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: survey.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: survey.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedSurvey(survey),\n        children: \"Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, survey.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)), selectedSurvey && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Voting for: \", selectedSurvey.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), selectedSurvey.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: `option-${option.id}`,\n          name: \"survey-option\",\n          value: option.id,\n          onChange: () => setSelectedOption(option.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `option-${option.id}`,\n          children: option.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, option.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVote,\n        children: \"Submit Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Surveys, \"tthxPma+Rkfz291tRtz54wph04E=\");\n_c = Surveys;\nexport default Surveys;\nvar _c;\n$RefreshReg$(_c, \"Surveys\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Surveys","_s","surveys","setSurveys","selectedSurvey","setSelectedSurvey","selectedOption","setSelectedOption","fetchSurveys","response","get","headers","Authorization","localStorage","getItem","data","error","console","handleVote","post","survey_id","id","option_id","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","survey","title","description","onClick","options","option","type","name","value","onChange","htmlFor","text","_c","$RefreshReg$"],"sources":["C:/projects/AvtaVote/frontend/src/components/Surveys.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Surveys() {\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [selectedSurvey, setSelectedSurvey] = useState(null);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchSurveys();\r\n  }, []);\r\n\r\n  const fetchSurveys = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/surveys', {\r\n        headers: { Authorization: localStorage.getItem('token') }\r\n      });\r\n      setSurveys(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch surveys:', error);\r\n    }\r\n  };\r\n\r\n  const handleVote = async () => {\r\n    if (!selectedSurvey || !selectedOption) return;\r\n    try {\r\n      await axios.post('http://localhost:5000/vote', {\r\n        survey_id: selectedSurvey.id,\r\n        option_id: selectedOption\r\n      }, {\r\n        headers: { Authorization: localStorage.getItem('token') }\r\n      });\r\n      alert('Vote recorded successfully!');\r\n      setSelectedSurvey(null);\r\n      setSelectedOption(null);\r\n    } catch (error) {\r\n      console.error('Failed to vote:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Available Surveys</h2>\r\n      {surveys.map(survey => (\r\n        <div key={survey.id}>\r\n          <h3>{survey.title}</h3>\r\n          <p>{survey.description}</p>\r\n          <button onClick={() => setSelectedSurvey(survey)}>Vote</button>\r\n        </div>\r\n      ))}\r\n      {selectedSurvey && (\r\n        <div>\r\n          <h3>Voting for: {selectedSurvey.title}</h3>\r\n          {selectedSurvey.options.map(option => (\r\n            <div key={option.id}>\r\n              <input\r\n                type=\"radio\"\r\n                id={`option-${option.id}`}\r\n                name=\"survey-option\"\r\n                value={option.id}\r\n                onChange={() => setSelectedOption(option.id)}\r\n              />\r\n              <label htmlFor={`option-${option.id}`}>{option.text}</label>\r\n            </div>\r\n          ))}\r\n          <button onClick={handleVote}>Submit Vote</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Surveys;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}