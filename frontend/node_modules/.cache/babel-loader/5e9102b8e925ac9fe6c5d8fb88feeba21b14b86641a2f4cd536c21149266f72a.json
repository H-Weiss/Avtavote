{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\AvtaVote\\\\frontend\\\\src\\\\components\\\\Surveys.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Surveys() {\n  _s();\n  const [surveys, setSurveys] = useState([]);\n  const [userVotes, setUserVotes] = useState({});\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetchSurveys();\n    fetchUserVotes();\n  }, []);\n  const fetchSurveys = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/surveys', {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      setSurveys(response.data);\n    } catch (error) {\n      console.error('Failed to fetch surveys:', error);\n    }\n  };\n  const fetchUserVotes = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/user-votes', {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      setUserVotes(response.data);\n    } catch (error) {\n      console.error('Failed to fetch user votes:', error);\n    }\n  };\n  const handleVote = async (surveyId, optionId) => {\n    try {\n      await axios.post('http://localhost:5000/vote', {\n        survey_id: surveyId,\n        option_id: optionId\n      }, {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      setMessage('הצבעתך נקלטה בהצלחה!');\n      setUserVotes({\n        ...userVotes,\n        [surveyId]: true\n      });\n    } catch (error) {\n      setMessage('אירעה שגיאה בעת ההצבעה. אנא נסה שנית.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u05E1\\u05E7\\u05E8\\u05D9\\u05DD \\u05D6\\u05DE\\u05D9\\u05E0\\u05D9\\u05DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this), surveys.map(survey => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: survey.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: survey.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), userVotes[survey.id] ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: \"\\u05D4\\u05E6\\u05D1\\u05E2\\u05EA \\u05DB\\u05D1\\u05E8 \\u05D1\\u05E1\\u05E7\\u05E8 \\u05D6\\u05D4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"survey-options\",\n        children: survey.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"survey-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: `option-${option.id}`,\n            name: `survey-${survey.id}`,\n            onChange: () => handleVote(survey.id, option.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `option-${option.id}`,\n            children: option.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this)]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, survey.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Surveys, \"4GK9/u1kLt6yu1OfyxeFaSMOHAg=\");\n_c = Surveys;\nexport default Surveys;\nvar _c;\n$RefreshReg$(_c, \"Surveys\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Surveys","_s","surveys","setSurveys","userVotes","setUserVotes","message","setMessage","fetchSurveys","fetchUserVotes","response","get","headers","Authorization","localStorage","getItem","data","error","console","handleVote","surveyId","optionId","post","survey_id","option_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","survey","title","description","id","options","option","type","name","onChange","htmlFor","text","_c","$RefreshReg$"],"sources":["C:/projects/AvtaVote/frontend/src/components/Surveys.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Surveys() {\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [userVotes, setUserVotes] = useState({});\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchSurveys();\r\n    fetchUserVotes();\r\n  }, []);\r\n\r\n  const fetchSurveys = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/surveys', {\r\n        headers: { Authorization: localStorage.getItem('token') }\r\n      });\r\n      setSurveys(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch surveys:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUserVotes = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/user-votes', {\r\n        headers: { Authorization: localStorage.getItem('token') }\r\n      });\r\n      setUserVotes(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch user votes:', error);\r\n    }\r\n  };\r\n\r\n  const handleVote = async (surveyId, optionId) => {\r\n    try {\r\n      await axios.post('http://localhost:5000/vote', \r\n        { survey_id: surveyId, option_id: optionId },\r\n        { headers: { Authorization: localStorage.getItem('token') } }\r\n      );\r\n      setMessage('הצבעתך נקלטה בהצלחה!');\r\n      setUserVotes({...userVotes, [surveyId]: true});\r\n    } catch (error) {\r\n      setMessage('אירעה שגיאה בעת ההצבעה. אנא נסה שנית.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>סקרים זמינים</h2>\r\n      {message && <div className=\"message\">{message}</div>}\r\n      {surveys.map(survey => (\r\n        <div key={survey.id} className=\"survey-item\">\r\n          <h3>{survey.title}</h3>\r\n          <p>{survey.description}</p>\r\n          {userVotes[survey.id] ? (\r\n            <div className=\"message\">הצבעת כבר בסקר זה</div>\r\n          ) : (\r\n            <div className=\"survey-options\">\r\n              {survey.options.map(option => (\r\n                <div key={option.id} className=\"survey-option\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id={`option-${option.id}`}\r\n                    name={`survey-${survey.id}`}\r\n                    onChange={() => handleVote(survey.id, option.id)}\r\n                  />\r\n                  <label htmlFor={`option-${option.id}`}>{option.text}</label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Surveys;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}