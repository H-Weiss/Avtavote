{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\AvtaVote\\\\frontend\\\\src\\\\components\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  const [surveyTitle, setSurveyTitle] = useState('');\n  const [surveyDescription, setSurveyDescription] = useState('');\n  const [surveyOptions, setSurveyOptions] = useState(['']);\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    fetchResults();\n  }, []);\n  const fetchResults = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/results', {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      setResults(response.data);\n    } catch (error) {\n      console.error('Failed to fetch results:', error);\n    }\n  };\n  const handleCreateSurvey = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/survey', {\n        title: surveyTitle,\n        description: surveyDescription,\n        options: surveyOptions.filter(option => option.trim() !== '')\n      }, {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      alert('Survey created successfully!');\n      setSurveyTitle('');\n      setSurveyDescription('');\n      setSurveyOptions(['']);\n      fetchResults();\n    } catch (error) {\n      console.error('Failed to create survey:', error);\n    }\n  };\n  const handleExportResults = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/export', {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(response.data));\n      const downloadAnchorNode = document.createElement('a');\n      downloadAnchorNode.setAttribute(\"href\", dataStr);\n      downloadAnchorNode.setAttribute(\"download\", \"survey_results.json\");\n      document.body.appendChild(downloadAnchorNode);\n      downloadAnchorNode.click();\n      downloadAnchorNode.remove();\n    } catch (error) {\n      console.error('Failed to export results:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateSurvey,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: surveyTitle,\n        onChange: e => setSurveyTitle(e.target.value),\n        placeholder: \"Survey Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: surveyDescription,\n        onChange: e => setSurveyDescription(e.target.value),\n        placeholder: \"Survey Description\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), surveyOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: option,\n        onChange: e => {\n          const newOptions = [...surveyOptions];\n          newOptions[index] = e.target.value;\n          setSurveyOptions(newOptions);\n        },\n        placeholder: `Option ${index + 1}`,\n        required: true\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setSurveyOptions([...surveyOptions, '']),\n        children: \"Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Survey Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), results.map(survey => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: survey.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Votes: \", survey.total_votes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: survey.options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [option.text, \": \", option.votes, \" votes (\", survey.total_votes > 0 ? (option.votes / survey.total_votes * 100).toFixed(2) : 0, \"%)\"]\n        }, option.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, survey.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExportResults,\n      children: \"Export Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}\n_s(AdminPanel, \"iFlqUv9D4hpRodSw+/1TAAhQRN8=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminPanel","_s","surveyTitle","setSurveyTitle","surveyDescription","setSurveyDescription","surveyOptions","setSurveyOptions","results","setResults","fetchResults","response","get","headers","Authorization","localStorage","getItem","data","error","console","handleCreateSurvey","e","preventDefault","post","title","description","options","filter","option","trim","alert","handleExportResults","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","map","index","newOptions","onClick","survey","total_votes","text","votes","toFixed","id","_c","$RefreshReg$"],"sources":["C:/projects/AvtaVote/frontend/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AdminPanel() {\r\n  const [surveyTitle, setSurveyTitle] = useState('');\r\n  const [surveyDescription, setSurveyDescription] = useState('');\r\n  const [surveyOptions, setSurveyOptions] = useState(['']);\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchResults();\r\n  }, []);\r\n\r\n  const fetchResults = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/results', {\r\n        headers: { Authorization: localStorage.getItem('token') }\r\n      });\r\n      setResults(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch results:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateSurvey = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:5000/survey', {\r\n        title: surveyTitle,\r\n        description: surveyDescription,\r\n        options: surveyOptions.filter(option => option.trim() !== '')\r\n      }, {\r\n        headers: { Authorization: localStorage.getItem('token') }\r\n      });\r\n      alert('Survey created successfully!');\r\n      setSurveyTitle('');\r\n      setSurveyDescription('');\r\n      setSurveyOptions(['']);\r\n      fetchResults();\r\n    } catch (error) {\r\n        console.error('Failed to create survey:', error);\r\n      }\r\n    };\r\n  \r\n    const handleExportResults = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/export', {\r\n          headers: { Authorization: localStorage.getItem('token') }\r\n        });\r\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(response.data));\r\n        const downloadAnchorNode = document.createElement('a');\r\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n        downloadAnchorNode.setAttribute(\"download\", \"survey_results.json\");\r\n        document.body.appendChild(downloadAnchorNode);\r\n        downloadAnchorNode.click();\r\n        downloadAnchorNode.remove();\r\n      } catch (error) {\r\n        console.error('Failed to export results:', error);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <h2>Admin Panel</h2>\r\n        <h3>Create New Survey</h3>\r\n        <form onSubmit={handleCreateSurvey}>\r\n          <input\r\n            type=\"text\"\r\n            value={surveyTitle}\r\n            onChange={(e) => setSurveyTitle(e.target.value)}\r\n            placeholder=\"Survey Title\"\r\n            required\r\n          />\r\n          <textarea\r\n            value={surveyDescription}\r\n            onChange={(e) => setSurveyDescription(e.target.value)}\r\n            placeholder=\"Survey Description\"\r\n            required\r\n          />\r\n          {surveyOptions.map((option, index) => (\r\n            <input\r\n              key={index}\r\n              type=\"text\"\r\n              value={option}\r\n              onChange={(e) => {\r\n                const newOptions = [...surveyOptions];\r\n                newOptions[index] = e.target.value;\r\n                setSurveyOptions(newOptions);\r\n              }}\r\n              placeholder={`Option ${index + 1}`}\r\n              required\r\n            />\r\n          ))}\r\n          <button type=\"button\" onClick={() => setSurveyOptions([...surveyOptions, ''])}>\r\n            Add Option\r\n          </button>\r\n          <button type=\"submit\">Create Survey</button>\r\n        </form>\r\n  \r\n        <h3>Survey Results</h3>\r\n        {results.map(survey => (\r\n          <div key={survey.id}>\r\n            <h4>{survey.title}</h4>\r\n            <p>Total Votes: {survey.total_votes}</p>\r\n            <ul>\r\n              {survey.options.map(option => (\r\n                <li key={option.id}>\r\n                  {option.text}: {option.votes} votes\r\n                  ({survey.total_votes > 0 ? ((option.votes / survey.total_votes) * 100).toFixed(2) : 0}%)\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n        <button onClick={handleExportResults}>Export Results</button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}